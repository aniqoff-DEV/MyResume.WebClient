<FluentStack Orientation="Orientation.Vertical" Class="rounded" Style="background-color: white; width:80%; margin-top:10px; padding:20px;">
    <FluentStack Orientation="Orientation.Horizontal">
        <FluentPersona Status="PresenceStatus.Available"
                       ImageSize="50px"
                       Initials="LY">
        </FluentPersona>
        <FluentLabel MarginBlock="1px" Typo="Typography.H1" Color="Color.Success">Константинов Андрей</FluentLabel>
        <FluentLabel MarginBlock="1px" Typo="Typography.H1" Color="Color.Accent">Junior C#</FluentLabel>
    </FluentStack>
    <FluentDivider Style="width: 100%;" Orientation=Orientation.Horizontal Role="DividerRole.Separator"></FluentDivider>

    <FluentLabel MarginBlock="1px" Typo="Typography.H2">Краснодар</FluentLabel>
    @* <FluentButton style="margin:5px;" Appearance="Appearance.Lightweight" OnClick="OpenCityDialog">@(city is null ? cityHolder : city.Name)</FluentButton> *@

    <FluentLabel MarginBlock="1px" Typo="Typography.H3">Желамая зарплата: 100 000р.</FluentLabel>

    @if (isEdit)
    {
        <FluentTextArea Rows="12" Cols="120" Style="height:100px;" @bind-Value="description">
        </FluentTextArea>
    }
    else
    {
        <FluentLabel Typo="Typography.H3">
            @description
        </FluentLabel>
    }

    <FluentStack Orientation="Orientation.Horizontal">
        <FluentButton Appearance="Appearance.Accent" OnClick="@(() => isEdit = !isEdit)">@(isEdit ? "Отменить" : "Редактировать")</FluentButton>
        @if(isEdit)
        {
            <FluentButton Appearance="Appearance.Accent">Сохранить</FluentButton>
        }
        else
        {
            <FluentButton BackgroundColor="var(--red-bg)" Color="var(--info)">Выйти из системы</FluentButton>
        }
    </FluentStack>
</FluentStack>

@code {
    private bool isEdit { get; set; } = false;
    private string description = "Меня зовут Андрей и я ничанющий разработчик на ASP.NET. Стек: TS,JS,C#,Dapper,React,EF Core, jwt";

    
}
