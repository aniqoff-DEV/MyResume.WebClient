@using MyResume.WebClient.Components.ToolBarFilters
@using MyResume.WebClient.Enums

<FluentToolbar id="toolbar-fluent-components" Style="width:100%; margin:0;" Class="rounded">
    <FluentSearch Placeholder="@placeholder"
                  @ref=seacrhCard
                  @bind-Value=searchValue
                  @bind-Value:after=HandleSearchInput
                  Style="width:auto; font-size:18px; padding:10px;"
                  AriaLabel="Search"
                  Appearance="FluentInputAppearance.Filled" />

    <FluentButton Appearance="VacancyButton" OnClick="@(() => OnSelectedFilter(SelectedFilter.OnVacancy))">Вакансии</FluentButton>
    <FluentButton Appearance="ResumeButton" OnClick="@(() => OnSelectedFilter(SelectedFilter.OnResume))">Резюме</FluentButton>
    <FluentButton Appearance="CompanyButton" OnClick="@(() => OnSelectedFilter(SelectedFilter.OnCompany))">Компании</FluentButton>
</FluentToolbar>

<div style="width:100%; margin:0;">
        @if (_SelectedFilter == SelectedFilter.OnVacancy)
        {
            <VacancyList @ref="vacancyList" />
        }
        else if (_SelectedFilter == SelectedFilter.OnResume)
        {
            <ResumeList @ref="resumeList" />
        }
        else if (_SelectedFilter == SelectedFilter.OnCompany)
        {
            <CompanyList @ref="companyList" />
        }
</div>

@code {
    public SelectedFilter _SelectedFilter { get; set; }

    private VacancyList? vacancyList;
    private ResumeList? resumeList;
    private CompanyList? companyList;
    private FluentSearch? seacrhCard;

    private Appearance VacancyButton;
    private Appearance ResumeButton;
    private Appearance CompanyButton;

    private string placeholder = "Поиск по вакансиям";
    private string searchValue = string.Empty;

    protected override void OnInitialized()
    {
        OnSelectedFilter(_SelectedFilter);
    }

    private void HandleSearchInput()
    {
        if (_SelectedFilter == SelectedFilter.OnVacancy)
        {           
            vacancyList!.SearchValue = searchValue.ToLower();
            return;
        }
        else if (_SelectedFilter == SelectedFilter.OnResume)
        {
            resumeList!.SearchValue = searchValue.ToLower();
            return;
        }
        else if (_SelectedFilter == SelectedFilter.OnCompany)
        {
            companyList!.SearchValue = searchValue.ToLower();
            return;
        }
    }

    private void OnSelectedFilter(SelectedFilter selected)
    {
        _SelectedFilter = selected;

        if (selected == SelectedFilter.OnVacancy)
        {
            placeholder = "Поиск по вакансиям";
            VacancyButton = Appearance.Accent;
            ResumeButton = Appearance.Outline;
            CompanyButton = Appearance.Outline;
            return;
        }
        else if (selected == SelectedFilter.OnResume)
        {
            placeholder = "Поиск по резюме";
            VacancyButton = Appearance.Outline;
            ResumeButton = Appearance.Accent;
            CompanyButton = Appearance.Outline;
            return;
        }
        else if (selected == SelectedFilter.OnCompany)
        {
            placeholder = "Поиск по компаниям";
            VacancyButton = Appearance.Outline;
            ResumeButton = Appearance.Outline;
            CompanyButton = Appearance.Accent;
            return;
        }
    }
}
