@using MyResume.WebClient.Enums

<FluentToolbar id="toolbar-fluent-components" Style="width:100%; margin:0;">
    <FluentSearch Placeholder="@placeholder" @bind-Value=value Style="width:auto; font-size:18px; padding:10px;" AriaLabel="Search" />
    <FluentButton Appearance="VacancyButton" OnClick="@(() => OnSelectedFilter(SelectedFilter.OnVacancy))">Вакансии</FluentButton>
    <FluentButton Appearance="ResumeButton" OnClick="@(() => OnSelectedFilter(SelectedFilter.OnResume))">Резюме</FluentButton>
    <FluentButton Appearance="CompanyButton" OnClick="@(() => OnSelectedFilter(SelectedFilter.OnCompany))">Компании</FluentButton>
</FluentToolbar>


<div style="width:100%; margin:0;">
    <FluentToolbar id="toolbar-fluent-components-two" style="width:100%; padding:15px;">
        @if (_SelectedFilter == SelectedFilter.OnVacancy)
        {
            <FluentNumberField style="margin:5px;" Step="10000" Min="0" @bind-Value="exampleInt" Appearance="FluentInputAppearance.Filled"
                Placeholder="от" Label="Укажите запрлату"></FluentNumberField>
            <FluentSelect style="margin:5px;" TOption="string" @bind-SelectedOption=@selectedWorkExperience Label="Опыт работы" Width="200px" Height="250px" />
            <FluentSelect style="margin:5px;" TOption="string" @bind-SelectedOption=@selectedEmploymentType Label="Тип занятости" Width="200px" Height="250px" />
            <FluentSelect style="margin:5px;" TOption="string" @bind-SelectedOption=@selectedWorkSchedule Label="График работы" Width="150px" Height="250px" />

            <FluentButton style="margin:5px;" Appearance="Appearance.Lightweight">@cityHolder</FluentButton>
            <FluentButton style="margin:5px;" Appearance="Appearance.Lightweight">@specializationHolder</FluentButton>

            <FluentButton style="margin:5px;" Appearance="Appearance.Accent">Применить</FluentButton>


        }
        else if (_SelectedFilter == SelectedFilter.OnResume)
        {
            <FluentNumberField style="margin:5px;" Step="10000" Min="0" @bind-Value="exampleInt" Appearance="FluentInputAppearance.Filled"
                Placeholder="от" Label="Укажите запрлату"></FluentNumberField>
            <FluentNumberField style="margin:5px;" Step="10000" Min="exampleInt" @bind-Value="exampleMaxInt" Appearance="FluentInputAppearance.Filled"
                               Placeholder="до"></FluentNumberField>

            <FluentSelect style="margin:5px;" TOption="string" @bind-SelectedOption=@selectedWorkExperience Label="Опыт работы" Width="200px" Height="250px" />
            <FluentSelect style="margin:5px;" TOption="string" @bind-SelectedOption=@selectedEmploymentType Label="Тип занятости" Width="200px" Height="250px" />
            <FluentSelect style="margin:5px;" TOption="string" @bind-SelectedOption=@selectedWorkSchedule Label="График работы" Width="150px" Height="250px" />

            <FluentButton style="margin:5px;" Appearance="Appearance.Lightweight">@cityHolder</FluentButton>
            <FluentButton style="margin:5px;" Appearance="Appearance.Lightweight">@specializationHolder</FluentButton>

            <FluentButton style="margin:5px;" Appearance="Appearance.Accent">Применить</FluentButton>

        }
        else if (_SelectedFilter == SelectedFilter.OnCompany)
        {
            <FluentButton style="margin:5px;" Appearance="Appearance.Lightweight">@companyIndustry</FluentButton>

            <FluentButton style="margin:5px;" Appearance="Appearance.Accent">Применить</FluentButton>
        }
    </FluentToolbar>
</div>

@code {    
    public SelectedFilter _SelectedFilter { get; set; }

    private Appearance VacancyButton;
    private Appearance ResumeButton;
    private Appearance CompanyButton;

    private string? selectedWorkExperience;
    private string? selectedEmploymentType;
    private string? selectedWorkSchedule;
    private string cityHolder = "Выбрать город";
    private string specializationHolder = "Выбрать специальность";
    private string companyIndustry = "Выбрать отрасль компании";

    private string placeholder = "Поиск по вакансиям";
    private int? exampleInt = null;
    private int? exampleMaxInt = null;

    private string? value;

    protected override void OnInitialized()
    {
        OnSelectedFilter(_SelectedFilter);
    }

    private void OnSelectedFilter(SelectedFilter selected)
    {
        _SelectedFilter = selected;

        if (selected == SelectedFilter.OnVacancy)
        {
            placeholder = "Поиск по вакансиям";
            VacancyButton = Appearance.Accent;
            ResumeButton = Appearance.Outline;
            CompanyButton = Appearance.Outline;
            return;
        }
        else if (selected == SelectedFilter.OnResume)
        {
            placeholder = "Поиск по резюме";
            VacancyButton = Appearance.Outline;
            ResumeButton = Appearance.Accent;
            CompanyButton = Appearance.Outline;
            return;
        }
        else if (selected == SelectedFilter.OnCompany)
        {
            placeholder = "Поиск по компаниям";
            VacancyButton = Appearance.Outline;
            ResumeButton = Appearance.Outline;
            CompanyButton = Appearance.Accent;
            return;
        }
    }
}
